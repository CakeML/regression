TODO: Support pull requests from different repositories
  The current worker will create a repository with only one remote; it needs to
  do something to fetch other remotes if there are pull requests from other
  remotes.

TODO: Add an option for cleaning away old directories (possibly do this by default?)?
  This could be done on the basis of their age

TODO: Figure out how to re-use partially built CakeML state for new jobs
  Re-use should be possible for the prefix of previously finished directories
  that have not changed

TODO: Add interface to stop jobs. Rethink job categorisation.
  Should the job page have a link for cancelling that job?
  If so, how would workers know to do so? Polling?
  Currently the interface, if you control a worker, is:
    CTRL-C to stop building, then manually hit the /api/stop/n URL to move it
    to Stopped, then if desired call the worker with --abort to move it to
    Aborted.
  Should the worker have a --stop command? Or --fail/--succeed?

TODO: Make server stop jobs that have been running too long
  This could be done as part of the refresh action.

TODO: Replace calls to the OS shell with SML Basis functionality
  In worker.sml there is a call to OS.Process.system that passes quite a lot of
  work off to the shell: setting environment variables, executing a subprocess,
  and redirecting standard streams. This could all be implemented in the SML
  Basis, in particular using Posix structure, instead. Doing so might be more
  reliable?
